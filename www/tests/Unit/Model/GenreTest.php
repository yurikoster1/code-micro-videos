<?php

namespace Tests\Unit\Model;

use App\Models\Genre;
use App\Traits\Models\Activatable;
use App\Traits\Models\UsesUuid;
use Illuminate\Database\Eloquent\SoftDeletes;
use PHPUnit\Framework\TestCase;
/**
 * @group model
 * @group genre
 */
class GenreTest extends TestCase
{
    /**
     * @var Genre
     */
    private $genre;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->genre = new Genre();
    }


    public function testFillable()
    {
        $expected_fillable= ['name','is_active'];
        $this->assertEquals($expected_fillable, $this->genre->getFillable());
    }

    public function testCasts()
    {
        $expected_casts = ['id' => 'string'];
        $this->assertEquals($expected_casts, $this->genre->getCasts());
    }

    public function testDates()
    {
        $expected_dates = ['created_at', 'deleted_at', 'updated_at'];
        $genre_dates = $this->genre->getDates();
        foreach ($expected_dates as $date){
            $this->assertContains($date, $genre_dates);
        }
        $this->assertCount(count($expected_dates), $genre_dates);
    }

    public function testIncrementing()
    {
        $this->assertFalse($this->genre->incrementing);
    }
    public function testUsesTraits(){
        $expected_traits = [
            SoftDeletes::class,
            UsesUuid::class,
            Activatable::class
        ];
        $traits = class_uses(Genre::class);
        $genre_traits = array_values($traits);
        $this->assertEquals($expected_traits, $genre_traits);
    }
}

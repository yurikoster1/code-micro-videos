<?php

namespace Tests\Unit\Model;

use App\Models\Category;
use App\Traits\Models\Activatable;
use App\Traits\Models\UsesUuid;
use Illuminate\Database\Eloquent\SoftDeletes;
use PHPUnit\Framework\TestCase;
/**
 * @group model
 * @group category
 */
class CategoryTest extends TestCase
{
    private $category;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->category = new Category();
    }


    public function testFillable()
    {
        $expected_fillable= ['name','description','is_active'];
        $this->assertEquals($expected_fillable, $this->category->getFillable());
    }

    public function testCasts()
    {
        $expected_casts = ['id' => 'string'];
        $this->assertEquals($expected_casts, $this->category->getCasts());
    }

    public function testDates()
    {
        $expected_dates = ['created_at', 'deleted_at', 'updated_at'];
        $category_dates = $this->category->getDates();
        foreach ($expected_dates as $date){
            $this->assertContains($date, $category_dates);
        }
        $this->assertCount(count($expected_dates), $category_dates);
    }

    public function testIncrementing()
    {
        $this->assertFalse($this->category->incrementing);
    }
    public function testUsesTraits(){
        $expected_traits = [
            SoftDeletes::class,
            UsesUuid::class,
            Activatable::class
        ];
        $traits = class_uses(Category::class);
        $category_traits = array_values($traits);
        $this->assertEquals($expected_traits, $category_traits);
    }

}

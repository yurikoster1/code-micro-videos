<?php

namespace Tests\Unit\Http\Requests\Genre\v1;

use App\Http\Requests\BaseRequest;
use App\Http\Requests\Genre\Interfaces\GenreStoreRequestInterface;
use App\Http\Requests\Genre\v1\GenreBaseRequest;
use App\Http\Requests\Genre\v1\GenreStoreRequest;
use Symfony\Component\HttpFoundation\Request as FoundationRequest;
use ArrayAccess;
use Illuminate\Contracts\Support\Arrayable;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Http\Request;
use Tests\TestCase;
use Illuminate\Contracts\Validation\ValidatesWhenResolved;

/**
 * @group requests
 * @group genre
 */
class GenreStoreRequestTest extends TestCase
{
    private $categoryRequest;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->categoryRequest = new GenreStoreRequest([]);
    }

    public function testInterfaces()
    {
        $expected_interfaces = [GenreStoreRequestInterface::class, ArrayAccess::class, Arrayable::class, ValidatesWhenResolved::class];
        $interfaces = class_implements($this->categoryRequest);
        $categoryRequestInterfaces = array_values($interfaces);
        $this->assertEqualsCanonicalizing($expected_interfaces, $categoryRequestInterfaces);
    }

    public function testParents()
    {
        $expected_parents = [GenreBaseRequest::class, BaseRequest::class, FormRequest::class, Request::class, FoundationRequest::class];
        $parents = class_parents($this->categoryRequest);
        $categoryRequestParents = array_values($parents);
        $this->assertEqualsCanonicalizing($expected_parents, $categoryRequestParents);
    }
}

version: "3.7"

services:

    app:
        build:
          dockerfile: .docker/app/Dockerfile
          context: .
          target: dev
        container_name: micro-videos-app
        image: code-micro-videos_app:dev
        entrypoint: dockerize -template /templates/.env:.env -template /templates/.env.testing:.env.testing -wait tcp://db:3306 -timeout 40s /entrypoint.sh
        environment:
            - _DB_HOST=db
            - _DB_DATABASE=code_micro_videos
            - _TEST_DB_DATABASE=code_micro_videos_test
            - _DB_USERNAME=root
            - _DB_PASSWORD=root
        volumes:
            - ./www:/var/www
        networks:
            - app-network
        depends_on:
            - db
            - redis

    nginx:
        build: .docker/nginx
        container_name: micro-videos-nginx
        restart: always
        tty: true
        ports:
            - "8000:80"
        volumes:
            - ./www:/var/www
        networks:
            - app-network
        depends_on:
            - app

    db:
        build:
          context: ./.docker/mysql
        container_name: micro-videos-db
        restart: always
        tty: true
        ports:
            - "33006:3306"
        volumes:
            - ./.docker/dbdata:/var/lib/mysql
            - ./.docker/mysql/init:/docker-entrypoint-initdb.d
        environment:
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_USER=root
        networks:
            - app-network

    redis:
        image: redis:alpine
        container_name: micro-videos-redis
        expose:
            - 6379
        networks:
            - app-network

networks:
    app-network:
        driver: bridge
